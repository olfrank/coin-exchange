{"version":3,"sources":["components/COIN/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/ExchangeHeader/ExchangeHeader.jsx","components/Footer/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","TdControl","TdName","Button","button","Coin","props","name","ticker","price","showBalance","balance","action","method","className","onClick","event","preventDefault","handleRefresh","tickerId","handleTransaction","Table","table","CoinList","coinData","map","key","Section","section","AccountBalance","buttonText","content","buttonClass","amount","handleBalanceVisibility","handleBrrrr","H1","h1","Octopus","GiOctopus","Header","header","ExchangeHeader","Component","Footer","href","formatPrice","parseFloat","Number","toFixed","Div","div","App","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","ticketUrl","newPrice","newCoinData","values","newValues","oldBalance","oldValue","isBuy","balanceChange","newcoinData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05347ca1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport styled from 'styled-components'\n\n    const Td = styled.td`\n      border: 1px solid #cccccc;\n      width: 16vw;\n    `;\n    const TdControl = styled(Td)`\n      width: 36vw;\n    `;\n\n    const TdName = styled(Td)`\n      width: 20vw\n    `;\n\n    const Button = styled.button`\n      border-radius: 3px;\n      margin: 0.5em 1em;\n    `;\n\nexport default function Coin(props) {\n\n    const handleRefresh = (event) => {\n     event.preventDefault();\n     props.handleRefresh(props.tickerId);\n   }\n\n   const handleBuy = (event) => {\n    event.preventDefault();\n    // if(props.balance >= props.price){\n      props.handleTransaction( true, props.tickerId );\n    //}\n    \n  }\n\n  const handleSell = (event) => {\n    event.preventDefault();\n    // if(props.balance > 0){\n      props.handleTransaction( false, props.tickerId );\n    //}\n\n  }\n        return(\n            <tr>\n              <TdName>{props.name}</TdName>\n              <Td>{props.ticker}</Td>\n              <Td>${props.price}</Td>\n              <Td>{props.showBalance ?  props.balance : \"-\"} </Td>\n              <TdControl>\n                <form action=\"#\" method =\"POST\">\n                <Button className = \"btn btn-info\" onClick= { handleRefresh } >REFRESH</Button>\n                <Button className = \"btn btn-success\" onClick= { handleBuy } >BUY</Button>\n                <Button className =  \"btn btn-warning\" onClick= { handleSell } >SELL</Button>\n                </form>\n              </TdControl>\n            </tr>\n          );\n}\n\nCoin.propTypes = {\n  name: PropTypes.string.isRequired,\n  ticker: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n}","import React from 'react'\nimport Coin from '../COIN/Coin';\nimport styled from 'styled-components'\n\n\nconst Table = styled.table`\n    font-size: 1.2rem;\n`;\n    \n    \n    \nexport default function CoinList(props) {\n        return (\n            <Table className = 'table-hover'>\n                <thead>\n                    <tr>\n                     <th>Name</th>\n                     <th>Ticker</th>\n                     <th>Price</th>\n                     <th>Balance</th>\n                     <th>Actions</th>\n\n                    </tr>\n                </thead>\n          <tbody> \n            {\n            props.coinData.map( ({key, name, ticker, balance, price})=>\n              <Coin \n              key = {key} \n              handleRefresh = {props.handleRefresh}\n              handleTransaction = {props.handleTransaction}\n              name =  {name} \n              ticker = {ticker} \n              showBalance = {props.showBalance}\n              balance = {balance}\n              price = {price}\n              tickerId = {key}\n              />\n            )\n            }\n          </tbody>\n          </Table>\n        )\n    }\n\n","\nimport React from 'react'\nimport PropTypes from \"prop-types\";\nimport styled from 'styled-components'\n\nconst Button = styled.button`\n    border-radius: 3px;\n    margin: 0.5em 1em;\n    padding: 0.25em 1em;\n`;\nconst Section = styled.section`\n    font-size: 2rem;\n    padding: 1.5rem 0 2rem 0;\n`;\nexport default function AccountBalance(props) {\n        const buttonText= props.showBalance ? 'Hide Balance' : 'Show Balance';\n        let content = null;\n        const buttonClass = 'btn ' + (props.showBalance ? 'btn-primary' : 'btn-info')\n        if( props.showBalance ) {\n           content = <> Account Balance: ${props.amount} </>;\n        }\n        return (\n            \n            <Section> \n                {content}\n                <Button \n                onClick={props.handleBalanceVisibility}\n                className = {buttonClass}>\n                    {buttonText}\n                </Button>\n                <button className=\"btn btn-success\"\n                        onClick = {props.handleBrrrr}>\n                    <i className=\"fas fa-parachute-box\"></i>\n                    \n                </button>\n            </Section>\n        );\n}\n\n\nAccountBalance.propTypes = {\n    amount: PropTypes.number.isRequired\n  }","\nimport React, { Component } from 'react'\nimport styled from 'styled-components'\n\nimport {GiOctopus} from 'react-icons/gi';\n\n\nconst H1 = styled.h1`\n    font-size: 4rem;\n    color: rgb(194, 194, 194);\n`;\n// const HeaderIcon = styled.div`\n//     font-size: 100px;\n//     margin-top: 20px;\n//     height: 8rem;\n//     pointer-events: none;\n//     color: #fff ;\n//     transform: rotateZ(0deg);\n\n//     &:hover{\n//         transform: ease-in-out rotateZ(360deg);\n//     }\n// `;\n const Octopus = styled(GiOctopus)`\n    font-size: 100px;\n    margin-top: 20px;\n    height: 8rem;\n    pointer-events: none;\n    color: #fff;\n    transform: rotateZ(0deg);\n    cursor: pointer;\n\n    &:hover{\n        transform: rotateZ(360deg);\n    }\n`;\n\n\nconst Header = styled.header`\n    background: linear-gradient(to right, rgb(60, 53, 63), rgb(98, 67, 109) );;\n    min-height: 20vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(10px + 2vmin);\n    color: white;\n `;\n\nexport default class ExchangeHeader extends Component {\n    render() {\n        return (\n            <Header>\n            \n                <Octopus />\n            \n            <H1>\n              COIN TRACKER\n            </H1>\n          </Header>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <footer className= \"footer\">\n            <div>\n                <p>Powered by: <a className=\"link\" href=\"https://coinpaprika.com/\">coinpaprika.com</a></p>\n            </div>\n            <div>\n                <p>Created and Designed by: <a className= \"link\" href=\"https://github.com/olfrank\">Ollie Francis</a> </p>\n            </div>\n            </footer>\n        )\n    }\n}\n","import React, {useState, useEffect} from 'react';\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport styled from 'styled-components'\nimport axios from 'axios';\nimport Footer from './components/Footer/Footer'\nimport 'bootswatch/dist/solar/bootstrap.min.css'\nimport '@fortawesome/fontawesome-free/js/all'\n\nconst COIN_COUNT = 10;\nconst formatPrice= price => parseFloat(Number(price).toFixed(3));\n\nconst Div = styled.div`\n    text-align: center;\n    background: linear-gradient(to right, rgb(60, 53, 63), rgb(98, 67, 109) );\n    color: lightsalmon;\n    `;\n\nfunction App(){\n  const [balance, setBalance] = useState(10000);\n  const [showBalance, setShowBalance] = useState(false);\n  const [coinData, setCoinData] = useState([]);\n\n  \n const componentDidMount = async () => {\n   const response = await axios.get(`https://api.coinpaprika.com/v1/coins`)\n   const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n   const tickerURL = \"https://api.coinpaprika.com/v1/tickers/\";\n   const promises = coinIds.map(id => axios.get(tickerURL + id));\n   const coinData = await Promise.all(promises)\n   const coinPriceData = coinData.map(function(response){\n   const coin = response.data \n    return {\n      key: coin.id,\n      name: coin.name,\n      ticker: coin.symbol,\n      balance: 0,\n      price: formatPrice(coin.quotes.USD.price)\n     };\n   })\n       setCoinData(coinPriceData);\n   };\n  \n  useEffect(() => {\n    if(coinData.length === 0){\n      componentDidMount()\n    }\n  });\n\n  const handleBrrrr = () => {\n    setBalance (oldBalance => oldBalance + 1200)\n  }\n\n  const handleBalanceVisibility = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  const handleTransaction = (isBuy, valueChangeId) => {\n    var balanceChange = isBuy ? 1 : -1;\n    const newcoinData = coinData.map( function(values){\n      let newValues = { ...values };\n      if(valueChangeId === values.key){\n        newValues.balance += balanceChange;\n        setBalance( oldBalance => oldBalance - balanceChange * newValues.price) \n      }\n      return newValues;\n    })\n    setCoinData(newcoinData);\n  }\n\n  const handleRefresh = async (valueChangeId) => {\n      const ticketUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n      const response = await axios.get(ticketUrl);\n      const newPrice = formatPrice(response.data.quotes.USD.price);\n      const newCoinData = coinData.map(function(values) {\n        let newValues = {...values};\n        if(valueChangeId === values.key){\n          newValues.price = newPrice; \n        }\n        return newValues;\n      });\n       setCoinData(newCoinData)\n  }\n  \n  \n    return (\n      <Div className=\"App\">\n        <ExchangeHeader/>\n        <AccountBalance \n          amount={balance} \n          showBalance={showBalance} \n          handleBrrrr = {handleBrrrr}\n          handleBalanceVisibility = {handleBalanceVisibility}/>\n\n        <CoinList \n          coinData = {coinData} \n          showBalance = {showBalance}\n          handleRefresh = {handleRefresh}\n          handleTransaction = {handleTransaction}\n          />\n          <Footer/>\n      </Div>\n    );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}